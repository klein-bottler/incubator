FROM alpine:3.16.2

RUN apk add --no-cache podman fuse-overlayfs shadow

# set up nsswitch.conf for Go's "netgo" implementation
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - podman run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
RUN [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf

RUN useradd podman && \
    echo -e "podman:1:999\npodman:1001:64535" > /etc/subuid && \
    echo -e "podman:1:999\npodman:1001:64535" > /etc/subgid

COPY assets/config/containers.global.conf /etc/containers/containers.conf
COPY assets/config/containers.local.conf /home/podman/.config/containers/containers.conf


RUN mkdir -p /home/podman/.local/share/containers && \
    chown podman:podman -R /home/podman && \
    chmod 644 /etc/containers/containers.conf

RUN sed -e 's|^#mount_program|mount_program|g' \
           -e '/additionalimage.*/a "/var/lib/shared",' \
           -e 's|^mountopt[[:space:]]*=.*$|mountopt = "nodev,fsync=0"|g' \
           /usr/share/containers/storage.conf \
           > /etc/containers/storage.conf

VOLUME /var/lib/containers
VOLUME /home/podman/.local/share/containers

RUN mkdir -p /var/lib/shared/overlay-images \
             /var/lib/shared/overlay-layers \
             /var/lib/shared/vfs-images \
             /var/lib/shared/vfs-layers && \
    touch /var/lib/shared/overlay-images/images.lock && \
    touch /var/lib/shared/overlay-layers/layers.lock && \
    touch /var/lib/shared/vfs-images/images.lock && \
    touch /var/lib/shared/vfs-layers/layers.lock

ENV _CONTAINERS_USERNS_CONFIGURED=""

# local dev utilities
RUN apk add --no-cache bash git jq zsh vim coreutils ncurses python3 py3-pip
# leave a relatively recent package index explicitly
RUN apk update

RUN mkdir -p /klein/metadata
COPY . /klein/src
RUN cp /klein/src/assets/config/.profile /root/.profile; \
    cp /klein/src/assets/config/.profile /etc/profile; \
    cp /klein/src/assets/config/.profile /home/podman/.profile; \
    cp /klein/src/assets/config/.profile /home/podman/.profile; \
    cp /klein/src/assets/config/.bashrc /root/.bashrc; \
    cp /klein/src/assets/config/.bashrc /home/podman/.bashrc; \
    cp /klein/src/assets/config/.bashrc /etc/bash/bashrc;\
    cp /klein/src/assets/enter-sh.sh /enter-sh; \
    cp -r /klein/src/assets/bootstrap /bootstrap; \
    env > /bootstrap/env_defaults; \
    echo "PATH=$PATH" >> /bootstrap/env_overrides
ARG BUILD_HASH="NA"
RUN . ./klein/src/assets/utils/image_tools.sh; \
    hash_src /klein/src/ > '/klein/metadata/local-klein-src.hash'; \
    printf "$BUILD_HASH" > '/klein/metadata/build-klein-src.hash';
ENV PATH="${PATH}:/bootstrap"
WORKDIR /
